@page "/producs"
@using BackEndPizza.Data.ProducsService;
@using BackEndPizza.Models.Tables;
@inject IProducsData data;

<PageTitle>Producs</PageTitle>
<div>
    <MudTable Items="@Elements" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info" FixedHeader="true" Height="400px" >
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Price</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Price">@context.Price</MudTd>
        </RowTemplate>
        <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }" InfoFormat="@($"End {infoFormat}")" HorizontalAlignment="HorizontalAlignment.End" />
    </PagerContent>
    </MudTable>
    
</div>
@code {
    private bool _hidePosition;
    private bool _loading;
    private string infoFormat = "{first_item}-{last_item} of {all_items}";
    private IEnumerable<BackEndPizza.Models.Tables.Producs> Elements = new List<BackEndPizza.Models.Tables.Producs>();
    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        Elements = data.GetProducs();
        _loading = false;
    }
}
